---
- name: Build FIO
  hosts: localhost,benchmark_hosts
  become: true
  tasks:
  - name: Install dependencies
    apt:
      name: "{{ item }}"
      state: present
      update_cache: true
    with_items:
      - make
      - gcc
      - librbd-dev
      - librados-dev
      - libaio-dev
      - zlib1g-dev
      - libibverbs-dev
      - libcairo2-dev
  - name: Get fio
    git:
       repo: https://github.com/axboe/fio.git
       dest: /opt/fio
       version: refs/tags/fio-3.5
  - name: Configure fio
    command: ./configure
    args:
      chdir: /opt/fio
      creates: /usr/local/bin/fio
  - name: Make fio
    command: make
    args:
      chdir: /opt/fio
      creates: /usr/local/bin/fio
  - name: Install fio
    command: make install
    args:
      chdir: /opt/fio
      creates: /usr/local/bin/fio

- name: Create Pool
  hosts:
    - mons
  gather_facts: True
  become: True
  vars:
    _pool_name: "{{ fiobench_pool_name | default('fiobench') }}"
    _pgnum: "{{ fiobench_pgnum | default('128') }}"
    _pgpnum: "{{ fiobench_pgpnum | default(_pgnum) }}"
    _size: "{{ fiobench_size | default('2048') }}"
  tasks:
    - name: Create fiobench pool
      command: "ceph osd pool create {{ _pool_name }} {{ _pgnum }} {{ _pgpnum }}"
      run_once: True
      when: fiobench_pool_name is not defined
    - name: Create benchmark ceph client
      command: "ceph auth get-or-create client.fiobench mon 'allow r' osd 'allow * pool={{ _pool_name }}'"
      run_once: True
      register: _ceph_benchmark_client
    - name: Set application for benchmark pool
      command: "ceph osd pool application enable {{ _pool_name }} rbd"
      run_once: True
      when: "ceph_release_num.{{ ceph_stable_release }} >= ceph_release_num.luminous"
    - name: Set benchmark_client fact
      set_fact:
        ceph_benchmark_client: "{{ _ceph_benchmark_client }}"

- name: Setup Clients
  hosts: benchmark_hosts
  gather_facts: True
  become: True
  vars:
    _pool_name: "{{ fiobench_pool_name | default('fiobench') }}"
    _pgnum: "{{ fiobench_pgnum | default('128') }}"
    _pgpnum: "{{ fiobench_pgpnum | default(_pgnum) }}"
    _size: "{{ fiobench_size | default('2048') }}"
    _ceph_args: "--id {{ fiobench_client_name | default('fiobench') }}"
  post_tasks:
    - name: Bootstrap Graphing node
      package:
        name: "{{ item }}"
        state: present
        use: "{{ ansible_pkg_mgr }}"
      with_items:
        - fio
        - gnuplot
      delegate_to: localhost
    - name: Install benchmark package
      package:
        name: "{{ item }}"
        state: present
        use: "{{ ansible_pkg_mgr }}"
      with_items:
        - rbd-nbd
        - xfsprogs
    - name: Write ceph benchmark client key to file
      copy:
        content: "{{ [hostvars[groups['mons'][0]]['ceph_benchmark_client']['stdout'], '\n'] | join('') }}"
        dest: "/etc/ceph/ceph.client.fiobench.keyring"
    - name: Create a ceph device for benchmarking
      command: "rbd {{ _ceph_args }} create {{ _pool_name }}/{{ item }} -s {{ _size }}"
      with_items:
        - "bench_direct_EBS-{{ inventory_hostname_short }}"
        - "bench_direct_RBD-{{ inventory_hostname_short }}"
        - "bench_file-{{ inventory_hostname_short }}"
      register: create_result
      failed_when: create_result.rc not in [0,17]
      changed_when: create_result.rc == 0
    - name: Get mapped rbd-nbd devices
      command: "rbd-nbd {{ _ceph_args }} list-mapped"
      register: nbd_mapped_before
    - name: Map nbd direct device
      command: "rbd-nbd {{ _ceph_args }} map {{ _pool_name }}/bench_direct_EBS-{{ inventory_hostname_short }}"
      when: "'bench_direct_EBS-' + inventory_hostname_short not in nbd_mapped_before.stdout"
    - name: Map nbd file device
      command: "rbd-nbd {{ _ceph_args }} map {{ _pool_name }}/bench_file-{{ inventory_hostname_short }}"
      when: "'bench_file-' + inventory_hostname_short not in nbd_mapped_before.stdout"
    - name: Get mapped rbd-nbd devices
      command: "rbd-nbd {{ _ceph_args }} list-mapped"
      register: nbd_mapped_after
    - name: Set bench_direct_device_name
      set_fact:
        bench_direct_device_name: "{{ nbd_mapped_after.stdout | regex_search(regexp, '\\1') | join('') }}"
      vars:
        regexp: 'bench_direct_EBS-{{ inventory_hostname_short }}.*(\/dev\/nbd[0-9]+)'
    - name: Set bench_file_device_name
      set_fact:
        bench_file_device_name: "{{ nbd_mapped_after.stdout | regex_search(regexp, '\\1') | join('') }}"
      vars:
        regexp: 'bench_file-{{ inventory_hostname_short }}.*(\/dev\/nbd[0-9]+)'
    - name: Create xfs file system on device
      filesystem:
        fstype: xfs
        device: "{{ bench_file_device_name }}"
    - name: Create benchmark directories
      file:
        state: directory
        path: "{{ item }}"
      with_items:
        - /opt/ceph_bench/logs
        - /mnt/fio_bench
    - name: Template out fio_bench files
      config_template:
        src: "templates/{{ item.src }}"
        dest: "/opt/ceph_bench/{{ item.name }}.cfg"
        config_overrides: "{{ item.override }}"
        config_type: "ini"
      with_items: "{{ fio_bench_list }}"

    # In py2 ConfigParser cant strip spaces around delimiters FIO needs that.
    - name: Manually strip spaces around delimiters
      shell: "sed -i 's/ = /=/g' /opt/ceph_bench/*.cfg"
    - name: Mount image
      mount:
        src: "{{ bench_file_device_name }}"
        fstype: "xfs"
        name: "/mnt/fio_bench"
        state: mounted
  roles:
    - ceph-defaults
    - ceph-common
    - ceph-config
    - ceph-client
