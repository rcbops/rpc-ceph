---
- name: Setup some localhost bits for MaaS testing
  hosts: localhost
  become: true
  tasks:
  - name: Setup directories
    file:
      state: directory
      path: "/etc/ceph"

- name: Playbook for configuring fake storage on Ceph hosts
  hosts: osds
  serial: 1
  become: true
  pre_tasks:
  - name: Gather variables for each operating system
    include_vars: "{{ item }}"
    with_first_found:
      - "test-vars-{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
      - "test-vars-{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
      - "test-vars-{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
      - "test-vars-{{ ansible_distribution | lower }}.yml"
      - "test-vars-{{ ansible_os_family | lower }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
      - "test-vars-{{ ansible_os_family | lower }}.yml"
      - "test-vars-linux.yml"
  tasks:
  - include: cleanup-ceph-storage.yml
  - name: Ensure xfsprogs and parted are installed on localhost
    package:
      name: [ "xfsprogs", "parted" ]
      state: present
      use: "{{ ansible_pkg_mgr }}"
    delegate_to: "{{ physical_host }}"
    run_once: True
  - name: Ensure xfsprogs is installed on containers
    package:
      name: xfsprogs
      state: present
  - name: Create Ceph files
    shell: "fallocate -l {{ rpc_ceph_test_osd_size }} /opt/{{ container_name }}_{{ item }}.img"
    args:
      creates: "/opt/{{ container_name }}_{{ item }}.img"
    with_items:
      - drive1
      - drive2
      - journ1
    register: ceph_create
    delegate_to: "{{ physical_host }}"
  - name: Run losetup
    shell: "losetup --find --show -P /opt/{{ container_name }}_{{ item }}.img"
    with_items:
      - drive1
      - drive2
      - journ1
    register: ceph_losetup
    delegate_to: "{{ physical_host }}"
  - name: Set mklabel gpt on loopback device
    shell: parted --script {{ item.stdout }} 'mklabel gpt'
    register: disk_gpt
    until: disk_gpt | success
    retries: 10
    delay: 1
    with_items: "{{ ceph_losetup.results }}"
    delegate_to: "{{ physical_host }}"
  - name: Create partition on loopback device
    shell: parted --script {{ item.stdout }} 'mkpart primary ext4 1 -1'
    register: part_create
    until: part_create | success
    retries: 10
    delay: 1
    with_items: "{{ ceph_losetup.results }}"
    delegate_to: "{{ physical_host }}"
  - name: Set mklabel gpt on loopback partitions
    shell: parted --script {{ item.stdout }}p1 'mklabel gpt'
    register: part_gpt
    until: (part_gpt.rc == 1) or (part_gpt.rc == 0)
    retries: 10
    delay: 1
    failed_when: part_gpt.rc not in [0,1]
    with_items: "{{ ceph_losetup.results }}"
    delegate_to: "{{ physical_host }}"
  - name: Run partprobe now that all disks are created
    command: partprobe
    delegate_to: "{{ physical_host }}"
    run_once: True
  - name: Get block devices
    shell: "lsblk | grep {{ item.stdout|regex_replace('/dev/') }}p1 | awk '{print $2}'"
    with_items: "{{ ceph_losetup.results }}"
    register: block_devs
    delegate_to: "{{ physical_host }}"
  - name: Ceph extra lxc config
    lxc_container:
      name: "{{ container_name }}"
      container_config:
        - "{{ lxc_apparmor }}"
        - "lxc.cgroup.devices.allow = b *:* rwm"
    delegate_to: "{{ physical_host }}"
  - name: Wait for container connectivity
    wait_for_connection:
      connect_timeout: "{{ lxc_container_wait_params.connect_timeout | default(omit) }}"
      delay: "{{ lxc_container_wait_params.delay | default(omit) }}"
      sleep: "{{ lxc_container_wait_params.sleep | default(omit) }}"
      timeout: "{{ lxc_container_wait_params.timeout | default(omit) }}"
  - name: Mknod on loopback devices
    shell: "mknod -m 666 {{ device_mapping[item.0] }} b {{ item.1.stdout.split(':')[0] }} {{ item.1.stdout.split(':')[1] }} && mknod -m 666 {{ device_mapping[item.0] }}1 b {{ item.1.stdout.split(':')[0] }} {{ item.1.stdout.split(':')[1] }}"
    with_indexed_items: "{{ block_devs.results }}"
    failed_when: false
  vars_files:
    - test-vars.yml

# In order to change sysctl settings for CentOS7
- name: Fix /proc/sys perms for CentOS7 containers
  hosts: rgws:mons:osds:mgrs
  tasks:
    - name: Remount /proc/sys rw
      command: "mount -o remount rw /proc/sys"
      when: ansible_os_family | lower == "redhat"

# For transparent_hugepage disable we need this for the AIO
- name: Fix /sys perms for OSDs
  hosts: osds
  tasks:
    - name: Remount /sys rw
      command: "mount -o remount rw /sys"
